/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {ApiRecordUtils, knownRecordFactories, appFromJS, NormalizedRecordEntities} from "../runtimeSagasAndRecords";
import {List, Record, RecordOf} from 'immutable';
import {Schema, schema, NormalizedSchema} from "normalizr";

import {
    GetFrontEndPermissionsResponse,
} from './GetFrontEndPermissionsResponse';

import {
    ResponseMeta,
} from './ResponseMeta';

import {
    ResponseMetaRecord,
    responseMetaRecordUtils,
} from './ResponseMetaRecord';

export const GetFrontEndPermissionsResponseRecordProps = {
	recType: "GetFrontEndPermissionsResponseApiRecord" as "GetFrontEndPermissionsResponseApiRecord",
    meta: ResponseMetaRecord(),
    data: null as { [key: string]: boolean; } | null,
};

export type GetFrontEndPermissionsResponseRecordPropsType = typeof GetFrontEndPermissionsResponseRecordProps;
export const GetFrontEndPermissionsResponseRecord = Record(GetFrontEndPermissionsResponseRecordProps, GetFrontEndPermissionsResponseRecordProps.recType);
export type GetFrontEndPermissionsResponseRecord = RecordOf<GetFrontEndPermissionsResponseRecordPropsType>;

knownRecordFactories.set(GetFrontEndPermissionsResponseRecordProps.recType, GetFrontEndPermissionsResponseRecord);


class GetFrontEndPermissionsResponseRecordUtils extends ApiRecordUtils<GetFrontEndPermissionsResponse, GetFrontEndPermissionsResponseRecord> {
	public normalize(apiObject: GetFrontEndPermissionsResponse, asEntity?: boolean): GetFrontEndPermissionsResponse {
		(apiObject as any).recType = GetFrontEndPermissionsResponseRecordProps.recType;
        responseMetaRecordUtils.normalize(apiObject.meta);
		return apiObject;
	}

	public toApi(record: GetFrontEndPermissionsResponseRecord): GetFrontEndPermissionsResponse {
        const apiObject = super.toApi(record);
        apiObject.meta = responseMetaRecordUtils.toApi(record.meta);
        return apiObject;
    }

	public fromApiPassthrough(apiObject: GetFrontEndPermissionsResponse): { [key: string]: boolean; } {
	    return apiObject.data!;
	}

	public fromApiPassthroughAsEntities(apiObject: GetFrontEndPermissionsResponse): NormalizedRecordEntities {
	    console.log("entities revival not supported on this response");
		return {entities: {}, result: List<string>()};
	}
}

export const getFrontEndPermissionsResponseRecordUtils = new GetFrontEndPermissionsResponseRecordUtils();
