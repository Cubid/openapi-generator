/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    GetChannelPublishedStatusResponse,
    GetChannelPublishedStatusResponseFromJSON,
    GetChannelPublishedStatusResponseToJSON,
} from '../models';

export interface GetChannelPublishedStatusRequest {
    channelId: number;
}

/**
 * 
 */
export class BrandApi extends runtime.BaseAPI {

    /**
     * Get the published status of a channel
     */
    async getChannelPublishedStatusRaw(requestParameters: GetChannelPublishedStatusRequest): Promise<runtime.ApiResponse<GetChannelPublishedStatusResponse>> {
        if (requestParameters.channelId === null || requestParameters.channelId === undefined) {
            throw new runtime.RequiredError('channelId','Required parameter requestParameters.channelId was null or undefined when calling getChannelPublishedStatus.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/channels/{channel-id}/published-status`.replace(`{${"channel-id"}}`, encodeURIComponent(String(requestParameters.channelId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => GetChannelPublishedStatusResponseFromJSON(jsonValue));
    }

    /**
     * Get the published status of a channel
     */
    async getChannelPublishedStatus(channelId: number): Promise<GetChannelPublishedStatusResponse> {
        const response = await this.getChannelPublishedStatusRaw({ channelId: channelId });
        return await response.value();
    }

}
