/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {ApiRecordUtils, knownRecordFactories, appFromJS, NormalizedRecordEntities} from "../runtimeSagasAndRecords";
import {List, Record, RecordOf} from 'immutable';
import {Schema, schema, NormalizedSchema} from "normalizr";

import {
    GetChannelPublishedStatusResponse,
} from './GetChannelPublishedStatusResponse';

import {
    ChannelPublishedStatus,
} from './ChannelPublishedStatus';
import {
    ResponseMeta,
} from './ResponseMeta';

import {
    ResponseMetaRecord,
    responseMetaRecordUtils,
} from './ResponseMetaRecord';

export const GetChannelPublishedStatusResponseRecordProps = {
	recType: "GetChannelPublishedStatusResponseRecord" as "GetChannelPublishedStatusResponseRecord",
    meta: ResponseMetaRecord(),
    data: null as ChannelPublishedStatus | null,
};

export type GetChannelPublishedStatusResponseRecordPropsType = typeof GetChannelPublishedStatusResponseRecordProps;
export const GetChannelPublishedStatusResponseRecord = Record(GetChannelPublishedStatusResponseRecordProps, GetChannelPublishedStatusResponseRecordProps.recType);
export type GetChannelPublishedStatusResponseRecord = RecordOf<GetChannelPublishedStatusResponseRecordPropsType>;

knownRecordFactories.set(GetChannelPublishedStatusResponseRecordProps.recType, GetChannelPublishedStatusResponseRecord);


class GetChannelPublishedStatusResponseRecordUtils extends ApiRecordUtils<GetChannelPublishedStatusResponse, GetChannelPublishedStatusResponseRecord> {
	public normalize(apiObject: GetChannelPublishedStatusResponse, asEntity?: boolean): GetChannelPublishedStatusResponse {
		(apiObject as any).recType = "GetChannelPublishedStatusResponseRecord";
        responseMetaRecordUtils.normalize(apiObject.meta);
		return apiObject;
	}

	public fromApiPassthrough(apiObject: GetChannelPublishedStatusResponse): ChannelPublishedStatus {
	    return apiObject.data;
	}

	public fromApiPassthroughAsEntities(apiObject: GetChannelPublishedStatusResponse): NormalizedRecordEntities {
	    console.log("entities revival not supported on this response");
		return {entities: {}, result: List<string>()};
	}
}

export const getChannelPublishedStatusResponseRecordUtils = new GetChannelPublishedStatusResponseRecordUtils();
